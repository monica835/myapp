{"remainingRequest":"D:\\web3\\tutorial\\tutorial\\node_modules\\babel-loader\\lib\\index.js!D:\\web3\\tutorial\\tutorial\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\web3\\tutorial\\tutorial\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\web3\\tutorial\\tutorial\\src\\components\\frame\\Subjects.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\web3\\tutorial\\tutorial\\src\\components\\frame\\Subjects.vue","mtime":1569768243509},{"path":"D:\\web3\\tutorial\\tutorial\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1569724981899},{"path":"D:\\web3\\tutorial\\tutorial\\node_modules\\babel-loader\\lib\\index.js","mtime":1569724978516},{"path":"D:\\web3\\tutorial\\tutorial\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1569724981899},{"path":"D:\\web3\\tutorial\\tutorial\\node_modules\\vue-loader\\lib\\index.js","mtime":1569725140151}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"D:\\\\web3\\\\tutorial\\\\tutorial\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport api from '@/api';\nexport default {\n  data: function data() {\n    return {\n      loading: false,\n      posts: [],\n      model: {}\n    };\n  },\n  created: function () {\n    var _created = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee() {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              this.refreshPosts();\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function created() {\n      return _created.apply(this, arguments);\n    }\n\n    return created;\n  }(),\n  methods: {\n    refreshPosts: function () {\n      var _refreshPosts = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.loading = true;\n                _context2.next = 3;\n                return api.getPosts();\n\n              case 3:\n                this.posts = _context2.sent;\n                this.loading = false;\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function refreshPosts() {\n        return _refreshPosts.apply(this, arguments);\n      }\n\n      return refreshPosts;\n    }(),\n    populatePostToEdit: function () {\n      var _populatePostToEdit = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3(post) {\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                this.model = Object.assign({}, post);\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function populatePostToEdit(_x) {\n        return _populatePostToEdit.apply(this, arguments);\n      }\n\n      return populatePostToEdit;\n    }(),\n    savePost: function () {\n      var _savePost = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee4() {\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (!this.model.id) {\n                  _context4.next = 5;\n                  break;\n                }\n\n                _context4.next = 3;\n                return api.updatePost(this.model.id, this.model);\n\n              case 3:\n                _context4.next = 7;\n                break;\n\n              case 5:\n                _context4.next = 7;\n                return api.createPost(this.model);\n\n              case 7:\n                this.model = {}; // reset form\n\n                _context4.next = 10;\n                return this.refreshPosts();\n\n              case 10:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function savePost() {\n        return _savePost.apply(this, arguments);\n      }\n\n      return savePost;\n    }(),\n    deletePost: function () {\n      var _deletePost = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee5(id) {\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                if (!confirm('Are you sure you want to delete this post?')) {\n                  _context5.next = 6;\n                  break;\n                }\n\n                // if we are editing a post we deleted, remove it from the form\n                if (this.model.id === id) {\n                  this.model = {};\n                }\n\n                _context5.next = 4;\n                return api.deletePost(id);\n\n              case 4:\n                _context5.next = 6;\n                return this.refreshPosts();\n\n              case 6:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function deletePost(_x2) {\n        return _deletePost.apply(this, arguments);\n      }\n\n      return deletePost;\n    }()\n  }\n};",{"version":3,"sources":["Subjects.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgDA,OAAA,GAAA,MAAA,OAAA;AACA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,OAAA,EAAA,KADA;AAEA,MAAA,KAAA,EAAA,EAFA;AAGA,MAAA,KAAA,EAAA;AAHA,KAAA;AAKA,GAPA;AAQA,EAAA,OARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA,mBAAA,YAAA;;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAWA,EAAA,OAAA,EAAA;AACA,IAAA,YADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,qBAAA,OAAA,GAAA,IAAA;AAFA;AAAA,uBAGA,GAAA,CAAA,QAAA,EAHA;;AAAA;AAGA,qBAAA,KAHA;AAIA,qBAAA,OAAA,GAAA,KAAA;;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAMA,IAAA,kBANA;AAAA;AAAA;AAAA,gDAMA,IANA;AAAA;AAAA;AAAA;AAAA;AAOA,qBAAA,KAAA,GAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,IAAA,CAAA;;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AASA,IAAA,QATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAUA,KAAA,KAAA,CAAA,EAVA;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAWA,GAAA,CAAA,UAAA,CAAA,KAAA,KAAA,CAAA,EAAA,EAAA,KAAA,KAAA,CAXA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,uBAaA,GAAA,CAAA,UAAA,CAAA,KAAA,KAAA,CAbA;;AAAA;AAeA,qBAAA,KAAA,GAAA,EAAA,CAfA,CAeA;;AAfA;AAAA,uBAgBA,KAAA,YAAA,EAhBA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAkBA,IAAA,UAlBA;AAAA;AAAA;AAAA,gDAkBA,EAlBA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAmBA,OAAA,CAAA,4CAAA,CAnBA;AAAA;AAAA;AAAA;;AAoBA;AACA,oBAAA,KAAA,KAAA,CAAA,EAAA,KAAA,EAAA,EAAA;AACA,uBAAA,KAAA,GAAA,EAAA;AACA;;AAvBA;AAAA,uBAwBA,GAAA,CAAA,UAAA,CAAA,EAAA,CAxBA;;AAAA;AAAA;AAAA,uBAyBA,KAAA,YAAA,EAzBA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAXA,CAAA","sourcesContent":["<template>\r\n  <div class=\"container-fluid mt-4\">\r\n    <h1 class=\"h1\">Posts Manager</h1>\r\n    <b-alert :show=\"loading\" variant=\"info\">Loading...</b-alert>\r\n    <b-row>\r\n      <b-col>\r\n        <table class=\"table table-striped\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>Title</th>\r\n              <th>Updated At</th>\r\n              <th>&nbsp;</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr v-for=\"post in posts\" :key=\"post.id\">\r\n              <td>{{ post.id }}</td>\r\n              <td>{{ post.title }}</td>\r\n              <td>{{ post.updatedAt }}</td>\r\n              <td class=\"text-right\">\r\n                <a href=\"#\" @click.prevent=\"populatePostToEdit(post)\">Edit</a> -\r\n                <a href=\"#\" @click.prevent=\"deletePost(post.id)\">Delete</a>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </b-col>\r\n      <b-col lg=\"3\">\r\n        <b-card :title=\"(model.id ? 'Edit Post ID#' + model.id : 'New Post')\">\r\n          <form @submit.prevent=\"savePost\">\r\n            <b-form-group label=\"Title\">\r\n              <b-form-input type=\"text\" v-model=\"model.title\"></b-form-input>\r\n            </b-form-group>\r\n            <b-form-group label=\"Body\">\r\n              <b-form-textarea rows=\"4\" v-model=\"model.body\"></b-form-textarea>\r\n            </b-form-group>\r\n            <div>\r\n              <b-btn type=\"submit\" variant=\"success\">Save Post</b-btn>\r\n            </div>\r\n          </form>\r\n        </b-card>\r\n      </b-col>\r\n    </b-row>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport api from '@/api'\r\nexport default {\r\n  data () {\r\n    return {\r\n      loading: false,\r\n      posts: [],\r\n      model: {}\r\n    }\r\n  },\r\n  async created () {\r\n    this.refreshPosts()\r\n  },\r\n  methods: {\r\n    async refreshPosts () {\r\n      this.loading = true\r\n      this.posts = await api.getPosts()\r\n      this.loading = false\r\n    },\r\n    async populatePostToEdit (post) {\r\n      this.model = Object.assign({}, post)\r\n    },\r\n    async savePost () {\r\n      if (this.model.id) {\r\n        await api.updatePost(this.model.id, this.model)\r\n      } else {\r\n        await api.createPost(this.model)\r\n      }\r\n      this.model = {} // reset form\r\n      await this.refreshPosts()\r\n    },\r\n    async deletePost (id) {\r\n      if (confirm('Are you sure you want to delete this post?')) {\r\n        // if we are editing a post we deleted, remove it from the form\r\n        if (this.model.id === id) {\r\n          this.model = {}\r\n        }\r\n        await api.deletePost(id)\r\n        await this.refreshPosts()\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>"],"sourceRoot":"src/components/frame"}]}