{"remainingRequest":"D:\\web3\\tutorial\\tutorial\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\web3\\tutorial\\tutorial\\src\\components\\frame\\Subjects.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\web3\\tutorial\\tutorial\\src\\components\\frame\\Subjects.vue","mtime":1569768243509},{"path":"D:\\web3\\tutorial\\tutorial\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1569724981899},{"path":"D:\\web3\\tutorial\\tutorial\\node_modules\\babel-loader\\lib\\index.js","mtime":1569724978516},{"path":"D:\\web3\\tutorial\\tutorial\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1569724981899},{"path":"D:\\web3\\tutorial\\tutorial\\node_modules\\vue-loader\\lib\\index.js","mtime":1569725140151}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport api from '@/api'\r\nexport default {\r\n  data () {\r\n    return {\r\n      loading: false,\r\n      posts: [],\r\n      model: {}\r\n    }\r\n  },\r\n  async created () {\r\n    this.refreshPosts()\r\n  },\r\n  methods: {\r\n    async refreshPosts () {\r\n      this.loading = true\r\n      this.posts = await api.getPosts()\r\n      this.loading = false\r\n    },\r\n    async populatePostToEdit (post) {\r\n      this.model = Object.assign({}, post)\r\n    },\r\n    async savePost () {\r\n      if (this.model.id) {\r\n        await api.updatePost(this.model.id, this.model)\r\n      } else {\r\n        await api.createPost(this.model)\r\n      }\r\n      this.model = {} // reset form\r\n      await this.refreshPosts()\r\n    },\r\n    async deletePost (id) {\r\n      if (confirm('Are you sure you want to delete this post?')) {\r\n        // if we are editing a post we deleted, remove it from the form\r\n        if (this.model.id === id) {\r\n          this.model = {}\r\n        }\r\n        await api.deletePost(id)\r\n        await this.refreshPosts()\r\n      }\r\n    }\r\n  }\r\n}\r\n",{"version":3,"sources":["Subjects.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Subjects.vue","sourceRoot":"src/components/frame","sourcesContent":["<template>\r\n  <div class=\"container-fluid mt-4\">\r\n    <h1 class=\"h1\">Posts Manager</h1>\r\n    <b-alert :show=\"loading\" variant=\"info\">Loading...</b-alert>\r\n    <b-row>\r\n      <b-col>\r\n        <table class=\"table table-striped\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>Title</th>\r\n              <th>Updated At</th>\r\n              <th>&nbsp;</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr v-for=\"post in posts\" :key=\"post.id\">\r\n              <td>{{ post.id }}</td>\r\n              <td>{{ post.title }}</td>\r\n              <td>{{ post.updatedAt }}</td>\r\n              <td class=\"text-right\">\r\n                <a href=\"#\" @click.prevent=\"populatePostToEdit(post)\">Edit</a> -\r\n                <a href=\"#\" @click.prevent=\"deletePost(post.id)\">Delete</a>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </b-col>\r\n      <b-col lg=\"3\">\r\n        <b-card :title=\"(model.id ? 'Edit Post ID#' + model.id : 'New Post')\">\r\n          <form @submit.prevent=\"savePost\">\r\n            <b-form-group label=\"Title\">\r\n              <b-form-input type=\"text\" v-model=\"model.title\"></b-form-input>\r\n            </b-form-group>\r\n            <b-form-group label=\"Body\">\r\n              <b-form-textarea rows=\"4\" v-model=\"model.body\"></b-form-textarea>\r\n            </b-form-group>\r\n            <div>\r\n              <b-btn type=\"submit\" variant=\"success\">Save Post</b-btn>\r\n            </div>\r\n          </form>\r\n        </b-card>\r\n      </b-col>\r\n    </b-row>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport api from '@/api'\r\nexport default {\r\n  data () {\r\n    return {\r\n      loading: false,\r\n      posts: [],\r\n      model: {}\r\n    }\r\n  },\r\n  async created () {\r\n    this.refreshPosts()\r\n  },\r\n  methods: {\r\n    async refreshPosts () {\r\n      this.loading = true\r\n      this.posts = await api.getPosts()\r\n      this.loading = false\r\n    },\r\n    async populatePostToEdit (post) {\r\n      this.model = Object.assign({}, post)\r\n    },\r\n    async savePost () {\r\n      if (this.model.id) {\r\n        await api.updatePost(this.model.id, this.model)\r\n      } else {\r\n        await api.createPost(this.model)\r\n      }\r\n      this.model = {} // reset form\r\n      await this.refreshPosts()\r\n    },\r\n    async deletePost (id) {\r\n      if (confirm('Are you sure you want to delete this post?')) {\r\n        // if we are editing a post we deleted, remove it from the form\r\n        if (this.model.id === id) {\r\n          this.model = {}\r\n        }\r\n        await api.deletePost(id)\r\n        await this.refreshPosts()\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>"]}]}