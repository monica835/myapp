{"remainingRequest":"D:\\web3\\tutorial\\tutorial\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\web3\\tutorial\\tutorial\\src\\components\\frame\\Subjects.vue?vue&type=style&index=0&id=e5c2864e&scoped=true&lang=css&","dependencies":[{"path":"D:\\web3\\tutorial\\tutorial\\src\\components\\frame\\Subjects.vue","mtime":1569763454910},{"path":"D:\\web3\\tutorial\\tutorial\\node_modules\\css-loader\\index.js","mtime":1569724997283},{"path":"D:\\web3\\tutorial\\tutorial\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1569725140163},{"path":"D:\\web3\\tutorial\\tutorial\\node_modules\\postcss-loader\\src\\index.js","mtime":1569725074401},{"path":"D:\\web3\\tutorial\\tutorial\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1569724981899},{"path":"D:\\web3\\tutorial\\tutorial\\node_modules\\vue-loader\\lib\\index.js","mtime":1569725140151}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\n.editable-row-operations a {\r\n  margin-right: 8px;\r\n}\r\n",{"version":3,"sources":["Subjects.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0IA;AACA;AACA","file":"Subjects.vue","sourceRoot":"src/components/frame","sourcesContent":["<template>\r\n  <a-table :columns=\"columns\" :dataSource=\"data\" bordered>\r\n    <template v-for=\"col in ['name', 'course', 'subject']\" :slot=\"col\" slot-scope=\"text, record, index\">\r\n      <div :key=\"col\">\r\n        <a-input\r\n          v-if=\"record.editable\"\r\n          style=\"margin: -5px 0\"\r\n          :value=\"text\"\r\n          @change=\"e => handleChange(e.target.value, record.key, col)\"\r\n        />\r\n        <template v-else>{{text}}</template>\r\n      </div>\r\n    </template>\r\n    <template slot=\"operation\" slot-scope=\"text, record, index\">\r\n      <div class='editable-row-operations'>\r\n        <span v-if=\"record.editable\">\r\n          <a @click=\"() => save(record.key)\">Save</a>\r\n          <a-popconfirm title='Sure to cancel?' @confirm=\"() => cancel(record.key)\">\r\n            <a>Cancel</a>\r\n          </a-popconfirm>\r\n        </span>\r\n        <span v-else>\r\n          <a @click=\"() => edit(record.key)\">Edit</a>\r\n          <a-popconfirm\r\n          title=\"Sure to delete?\"\r\n          @confirm=\"() => onDelete(record.key)\">\r\n          <a href=\"javascript:;\">Delete</a>\r\n        </a-popconfirm>\r\n        <a-button class=\"editable-add-btn\" @click=\"handleAdd\">Add</a-button>\r\n        </span>\r\n      </div>\r\n    </template>\r\n  </a-table>\r\n</template>\r\n<script>\r\nconst columns = [{\r\n  title: 'name',\r\n  dataIndex: 'name',\r\n  width: '25%',\r\n  scopedSlots: { customRender: 'name' },\r\n}, {\r\n  title: 'course',\r\n  dataIndex: 'course',\r\n  width: '15%',\r\n  scopedSlots: { customRender: 'course' },\r\n}, {\r\n  title: 'subject',\r\n  dataIndex: 'subject',\r\n  width: '30%',\r\n  scopedSlots: { customRender: 'subject' },\r\n}, {\r\n  title: 'operation',\r\n  dataIndex: 'operation',\r\n  scopedSlots: { customRender: 'operation' },\r\n}]\r\n\r\nconst data = []\r\n for (let i = 0; i < 1; i++) {\r\n  data.push({\r\n    key: i.toString(),\r\n    name: `Monica `,\r\n    course: `CCT`,\r\n    subject: `WEBDEV III `,\r\n  })\r\n }\r\nexport default {\r\n  data () {\r\n    this.cacheData = data.map(item => ({ ...item }))\r\n    return {\r\n      data,\r\n      columns,\r\n    }\r\n  },\r\n  methods: {\r\n    handleChange (value, key, column) {\r\n      const newData = [...this.data]\r\n      const target = newData.filter(item => key === item.key)[0]\r\n      if (target) {\r\n        target[column] = value\r\n        this.data = newData\r\n      }\r\n    },\r\n    edit (key) {\r\n      const newData = [...this.data]\r\n      const target = newData.filter(item => key === item.key)[0]\r\n      if (target) {\r\n        target.editable = true\r\n        this.data = newData\r\n      }\r\n    },\r\n    save (key) {\r\n      const newData = [...this.data]\r\n      const target = newData.filter(item => key === item.key)[0]\r\n      if (target) {\r\n        delete target.editable\r\n        this.data = newData\r\n        this.cacheData = newData.map(item => ({ ...item }))\r\n      }\r\n    },\r\n    cancel (key) {\r\n      const newData = [...this.data]\r\n      const target = newData.filter(item => key === item.key)[0]\r\n      if (target) {\r\n        Object.assign(target, this.cacheData.filter(item => key === item.key)[0])\r\n        delete target.editable\r\n        this.data = newData\r\n      }\r\n    },\r\n    onDelete (key) {\r\n      const dataSource = [...this.dataSource]\r\n      this.dataSource = dataSource.filter(item => item.key !== key)\r\n    },\r\n     onCellChange (key, dataIndex, value) {\r\n        const dataSource = [...this.dataSource]\r\n        const target = dataSource.find(item => item.key === key)\r\n        if (target) {\r\n          target[dataIndex] = value\r\n          this.dataSource = dataSource\r\n        }\r\n    },\r\n    handleAdd () {\r\n      const { count, dataSource } = this\r\n      const newData = {\r\n        key: count,\r\n        name: `Edward King ${count}`,\r\n        course: 32,\r\n        subject: `London, Park Lane no. ${count}`,\r\n      }\r\n      this.dataSource = [...dataSource, newData]\r\n      this.count = count + 1\r\n    },\r\n    handleAdd(){\r\n        alert(newData)\r\n    }\r\n  },\r\n}\r\n</script>\r\n<style scoped>\r\n.editable-row-operations a {\r\n  margin-right: 8px;\r\n}\r\n</style>"]}]}